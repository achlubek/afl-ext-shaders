#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

#define SHADOW_MAP_COMPUTE_STAGE

#include sphereRaytracing.glsl
#include celestialDataStructs.glsl
#include rendererDataSet.glsl
#include celestialRaycastSet.glsl
#include polar.glsl
#include rotmat3d.glsl
#include proceduralValueNoise.glsl
#include wavesNoise.glsl
#include textureBicubic.glsl
#include celestialCommons.glsl

void main()
{
    vec3 point = getRaycastPoint(int(gl_GlobalInvocationID.x));
    RenderedCelestialBody body = getRenderedBody(celestialBuffer.celestialBody);
    vec3 directionToBody = normalize(body.position - point);
    vec3 directionToPoint = -directionToBody;
    float terrainHeight = celestialGetHeightLowRes(body, directionToPoint);
    vec3 reconstructedPoint = body.position + directionToPoint * (body.radius + terrainHeight * body.terrainMaxLevel);
    raycastResultBuffer.position[int(gl_GlobalInvocationID.x)] = vec4(reconstructedPoint, distance(point, body.position) - (body.radius + terrainHeight * body.terrainMaxLevel));
}
